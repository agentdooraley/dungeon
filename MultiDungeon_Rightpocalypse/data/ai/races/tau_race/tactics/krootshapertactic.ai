----------------------------------------
-- File: 'KrootShapertactic.ai'
-- Edited by Thudmeizer @ 12.02.2008

class 'KrootShaperTactic' (TauInfantryTactic)

function KrootShaperTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("KrootShaper Tactic")
end

function KrootShaperTactic:AlwaysAttack()
	return true
end

function KrootShaperTactic:Update()

	if (self:IsComplete()) then
		return
	end
	
	-- State machine
	if (not InfantryTactic.Update( self )) then
		return
	end
end

function KrootShaperTactic:InitAbilities()

	-- Init ability ID's
	if (KrootShaper.hunt_id == nil) then
		KrootShaper.hunt_id = cpu_manager.stats:GetAbilityID( "tau_damage_improvements" )	
	end
	if (KrootShaper.devour_id == nil) then
		KrootShaper.devour_id = cpu_manager.stats:GetAbilityID( "tau_devour" )	
	end
    if (KrootShaperTactic.run_id == nil) then
		KrootShaper.run_id = cpu_manager.stats:GetAbilityID( "all_run!" )	
	end
end
 
function KrootShaperTactic:DoAbilities()

   -- Check if we can cannibalize
	local vSquadPos = self.squad_ai:GetPosition()
	if (not cpu_manager.terrain_analyzer:HasThreat(vSquadPos, 50)) then

		-- Check if we have corpses in range
		local numCorpses = self.squad_ai:GetNumCorpses(10);
		if (numCorpses > 0) then
			self.squad_ai:DoCannibalize();
		end
	end

    if (self.squad_ai:CanDoAbility( KrootShaper.run_id )) then
		self.squad_ai:DoSpecialAbility( KrootShaper.run_id )
	end

	Ability.DoAbility( self.squad_ai, KrootShaper.hunt_id, Ability.Filters.IsInCombat )	
	    if (self.squad_ai:CanDoAbility( KrootShaper.hunt_id )) then
			self.squad_ai:DoSpecialAbility( KrootShaper.hunt_id )
	    end
	end
end