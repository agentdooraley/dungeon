----------------------------------------
-- File: 'darkeldararchontactic.ai'
-- Edited by Thudmeizer @ 22.04.2016

class 'DarkEldarArchonTactic' (DarkEldarInfantryTactic)

DarkEldarArchon = {}

function DarkEldarArchonTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Dark Eldar Archon Tactic")

	self.dance_time = 0
end


-- Assassinate win condition -- never attack
function DarkEldarArchonTactic:IsAttacker()
	return (not cpu_manager.assassinate and self:IsCommanderAttacker())
end

-- Assassinate win condition -- never defend
function DarkEldarArchonTactic:IsDefender()
	return (not cpu_manager.assassinate and self:IsCommanderDefender())
end

function DarkEldarArchonTactic:InitAbilities()

	-- Init ability ID's
	if (DarkEldarArchon.vitae_id == nil) then
		DarkEldarArchon.vitae_id = cpu_manager.stats:GetAbilityID( "dark_eldar_animus_vitae" )
	end

	if (DarkEldarArchon.crucible_id == nil) then
		DarkEldarArchon.crucible_id = cpu_manager.stats:GetAbilityID( "dark_eldar_crucible" )
	end

	if (DarkEldarArchon.haywire_id == nil) then
		DarkEldarArchon.haywire_id = cpu_manager.stats:GetAbilityID( "dark_eldar_haywire_bombs_sp" )
	end

	if (DarkEldarArchon.leach_id == nil) then
		DarkEldarArchon.leach_id = cpu_manager.stats:GetAbilityID( "dark_eldar_soul_leach" )
	end

	if (DarkEldarArchon.portal_id == nil) then
		DarkEldarArchon.portal_id = cpu_manager.stats:GetAbilityID( "dark_eldar_soul_portal" )
	end
end

function DarkEldarArchonTactic:DoAbilities()

	-- We are dying, lower requisites for attacks and use life drain!	
	if (self.squad_ai:WasRecentlyHurt() and self.squad_ai:GetHealthPercentage() < 0.5) then
		Ability.DoAbilityTarget(self.squad_ai, DarkEldarArchon.crucible_id, Ability.Filters.CloseSquadEnemy, 4)
		Ability.DoAbilityTarget(self.squad_ai, DarkEldarArchon.vitae_id, Ability.Filters.CloseInfantryEnemy, 3)
		Ability.DoAbilityPos(self.squad_ai, DarkEldarArchon.haywire_id, Ability.Filters.CloseVehicleEnemy, 1)
	else
		Ability.DoAbilityTarget(self.squad_ai, DarkEldarArchon.crucible_id, Ability.Filters.CloseSquadEnemy, 8)
		Ability.DoAbilityTarget(self.squad_ai, DarkEldarArchon.vitae_id, Ability.Filters.CloseInfantryEnemy, 6)
		Ability.DoAbilityPos(self.squad_ai, DarkEldarArchon.haywire_id, Ability.Filters.CloseVehicleEnemy, 2)
	end

	-- Luster of Souls: Restore the strength of your squad by concealing them and regaining their health. Exchange this great ritual in exchange for souls.
	if (self.squad_ai:WasRecentlyHurt() and self.squad_ai:GetHealthPercentage() < 0.4) then
		Ability.DoAbilityArea(self.squad_ai, DarkEldarArchon.leach_id, Ability.Filters.CloseSquadEnemy, 15, 4)
		Ability.DoAbilityArea(self.squad_ai, DarkEldarArchon.leach_id, Ability.Filters.CloseCommanderEnemy, 15, 1)
	end

	-- Try to place portal (not supported by AI which cannot use these like Eldar Webways or IG Bunkers to send troops between them)
	--Ability.DoAbilityPos(self.squad_ai, DarkEldarArchon.portal_id, Ability.Filters.CloseEnemy, 5)


	-- Check if I should enable/disable foot on fire
	--if (not self.squad_ai:IsAttached()) then
		--self:DoAbilityFoF()
	--end
end


function DarkEldarArchonTactic:Update()

	if (self:IsComplete()) then
		return
	end
    
	-- State machine
	if (not InfantryTactic.Update( self )) then
		return
	end
   
 	-- Check for close commander
	local bSetRanged = false
	local bSetMelee = false
	local vSquadPos = self.squad_ai:GetPosition()
	local eStance = self.squad_ai:GetMeleeStance()
	local oEnemyCommander = Ability.Filters.CloseCommanderEnemy(vSquadPos, 20, 1)
   	if (oEnemyCommander ~= nil) then
       
        	-- Check health
        	if (self.squad_ai:GetHealthPercentage() > 0.8 and oEnemyCommander:GetHealthPercentage() < 0.3) then
			bSetMelee = (eStance == SquadAI.MSTANCE_Ranged)
			self.dance_time = 0
		else
			bSetRanged = (eStance == SquadAI.MSTANCE_Assault)
		end

		else
    
    		-- Check for close attached commander
    		local oSquad = Ability.Filters.CloseInfantryEnemy(vSquadPos, 20, 4)
    		if (oSquad ~= nil and oSquad:IsAttached()) then
    			bSetRanged = (eStance == SquadAI.MSTANCE_Assault)
    		else
    			bSetMelee = (eStance == SquadAI.MSTANCE_Ranged)
		end
	end

	-- At leat 10 secs ranged stance/dancing
	if (bSetRanged) then
		self.squad_ai:DoSetMeleeStance( SquadAI.MSTANCE_Ranged )
		self.dance_time = g_iGMT
	elseif (bSetMelee and self.stateID ~= Tactic.StateID.DoDance and g_iGMT > self.dance_time + 10) then
		self.squad_ai:DoSetDefaultMeleeStance()
		self.dance_time = 0
	end
 
	-- Assassinate win condition -- never attach to a squad / do not attach while dancing
	if (not cpu_manager.assassinate and self.squad_ai:GetMeleeStance() == SquadAI.MSTANCE_Assault) then
    
		if (self:TryAttachSquad(true, true, 50, 100, nil) == nil) then
		
			if (self:TryAttachSquad(false, false, 50, 100, self.m_fCommanderAttachHealth) == nil) then
				self:TryAttachSquadMelee()
			end
		end
	end

	-- Check if we are in serious trouble
	self:EmergencyRetreat()
end
